#*
* Velocity macro library
*#

## Convenient definitions for often used complex array expressions

#macro(modSqrZ $m)(${m}.real()*${m}.real() + ${m}.imag()*${m}.imag())#end
#macro(modSqrM $m $mij)(${m}.getRealElement(${mij})*${m}.getRealElement(${mij}) + ${m}.getImagElement(${mij})*${m}.getImagElement(${mij}))#end
#macro(modSqrA $m $mij)(${m}Re${mij}*${m}Re${mij} + ${m}Im${mij}*${m}Im${mij})#end

#macro(multZZRe $u $v)(${u}.real()*${v}.real() - ${u}.imag()*${v}.imag())#end
#macro(multZZIm $u $v)(${u}.imag()*${v}.real() + ${u}.real()*${v}.imag())#end
#macro(multAZRe $m $mij $z)(${m}Re${mij}*${z}.real() - ${m}Im${mij}*${z}.imag())#end
#macro(multAZIm $m $mij $z)(${m}Im${mij}*${z}.real() + ${m}Re${mij}*${z}.imag())#end
#macro(multAARe $m $mij $n $nij)(${m}Re${mij}*${n}Re${nij} - ${m}Im${mij}*${n}Im${nij})#end
#macro(multAAIm $m $mij $n $nij)(${m}Im${mij}*${n}Re${nij} + ${m}Re${mij}*${n}Im${nij})#end
#macro(multAMRe $m $mij $n $nij)(${m}Re${mij}*${n}.getRealElement(${nij}) - ${m}Im${mij}*${n}.getImagElement(${nij}))#end
#macro(multAMIm $m $mij $n $nij)(${m}Im${mij}*${n}.getRealElement(${nij}) + ${m}Re${mij}*${n}.getImagElement(${nij}))#end
#macro(multMARe $m $mij $n $nij)(${m}.getRealElement(${mij})*${n}Re${nij} - ${m}.getImagElement(${mij})*${n}Im${nij})#end
#macro(multMAIm $m $mij $n $nij)(${m}.getImagElement(${mij})*${n}Re${nij} + ${m}.getRealElement(${mij})*${n}Im${nij})#end
