package JSci.tests;

import JSci.io.*;
import java.net.URL;

public class MathMLTest extends junit.framework.TestCase {
        public static void main(String arg[]) {
                junit.textui.TestRunner.run(MathMLTest.class);
        }
        public MathMLTest(String name) {
                super(name);
        }
        protected void setUp() {
                JSci.GlobalSettings.ZERO_TOL=1.0e-9;
        }
	public void testParse() throws Exception {
		MathMLParser parser = new MathMLParser();
                final URL url = getClass().getResource("test.mml");
                if(url == null)
                    throw new Exception("test.mml not found!");

                long startTime = System.currentTimeMillis();
		parser.parse(url.toString());
                long endTime = System.currentTimeMillis();
                System.out.println("Parse: "+(endTime-startTime)+"ms");

                startTime = System.currentTimeMillis();
		Object[] list = parser.translateToJSciObjects();
                endTime = System.currentTimeMillis();
                System.out.println("Translate: "+(endTime-startTime)+"ms");

                startTime = System.currentTimeMillis();
		for(int i=0; i<list.length; i+=2) {
			Object actual = list[i];
			Object expected = list[i+1];
			if(actual instanceof MathMLExpression)
				actual = ((MathMLExpression) actual).evaluate();
                        if(expected instanceof MathMLExpression)
                                expected = ((MathMLExpression) expected).evaluate();
			assertEquals(expected, actual);
		}
                endTime = System.currentTimeMillis();
                System.out.println("Evaluate: "+(endTime-startTime)+"ms");
	}
}
